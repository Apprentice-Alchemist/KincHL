name: Build

on: [push]

jobs:

  build:
    if: ${{ !contains(join(github.event.commits.*.message),'[skip ci]') }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        graphics: [opengl]
        include:
          - os: macos-latest
            graphics: metal
          - os: windows-latest
            graphics: direct3d11
    steps:
    - name: Install Haxe
      uses: krdlab/setup-haxe@master
      with:
          haxe-version: 4.1.3
    - name: Set up MSVC
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
    - name: Checkout hashlink
      uses: actions/checkout@v2
      with:
        repository: "HaxeFoundation/hashlink"
        path: "hashlink"

    - name: Checkout KincHL
      uses: actions/checkout@v2
      with:
        path: "KincHL"

    - name: Checkout Kinc
      uses: actions/checkout@v2
      with:
        repository: "Kode/Kinc"
        path: "Kinc"
        submodules: "recursive"
    
    - name: Apt Update
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update
      continue-on-error: true
    - name: Apt Install
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libasound2-dev libxinerama-dev libxrandr-dev libgl1-mesa-dev libxi-dev libxcursor-dev --yes --quiet

    - name: Build Hashlink
      if: matrix.os != 'windows-latest'
      run: |
        cd hashlink
        make libhl
        make hl
        make ui
        sudo make install
    - name: Build Hashlink
      if: matrix.os == 'windows-latest'
      run: |
        cd hashlink
        MSBuild libhl.vcxproj /nologo /clp:ErrorsOnly "-p:Configuration=Release;PlatformToolset=v142;WindowsTargetPlatformVersion=10"
        MSBuild hl.vcxproj /nologo /clp:ErrorsOnly "-p:Configuration=Release;PlatformToolset=v142;WindowsTargetPlatformVersion=10"
    - name: Build KincHL
      if: matrix.os != 'macos-latest'
      run: |
        cd KincHL
        node ../Kinc/make.js --dynlib --compile --noshaders -g ${{matrix.graphics}}
    - name: Build KincHL (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd KincHL
        node ../Kinc/make.js --dynlib --noshaders -g ${{matrix.graphics}}
        cd build
        xcodebuild -configuration Release -project KincHL.xcodeproj ARCHS=x86_64