name: Build

on: [push]

jobs:
  build:
    if: ${{ !contains(join(github.event.commits.*.message),'[skip ci]') }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        graphics: [opengl]
        include:
          - os: macos-latest
            graphics: metal
          - os: windows-latest
            graphics: direct3d11
    steps:
    - name: Install Haxe
      uses: krdlab/setup-haxe@master
      with:
          haxe-version: 4.1.3
    - name: Checkout hashlink
      uses: actions/checkout@v2
      with:
        repository: "HaxeFoundation/hashlink"
        path: "hashlink"
    - name: Checkout KincHL
      uses: actions/checkout@v2
      with:
        path: "KincHL"
    - name: Checkout Kinc
      uses: actions/checkout@v2
      with:
        repository: "Kode/Kinc"
        path: "Kinc"
        submodules: "recursive"
    - name: Apt Update
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update
      continue-on-error: true
    - name: Apt Install
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libasound2-dev libxinerama-dev libxrandr-dev libgl1-mesa-dev libxi-dev libxcursor-dev --yes --quiet
    - name: Set up MSVC
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
    - name: Build Hashlink
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd hashlink
        make libhl
        make hl
        make ui
        sudo make install
    - name: Build Hashlink
      if: matrix.os == 'macos-latest'
      run: |
        cd hashlink
        cc -c src/gc.c src/std/*.c include/pcre/*.c -I src -I include -I include/pcre -I src/std -target x86_64-apple-macos10.12
        cc -o libhl.intel.dylib -shared *.o -lpthread -lm -target x86_64-apple-macos10.12
        rm -f *.o
        cc -c src/gc.c src/std/*.c include/pcre/*.c -I src -I include -I include/pcre -I src/std -target arm64-apple-macos11
        cc -o libhl.arm.dylib -shared *.o -lpthread -lm -target arm64-apple-macos11
        rm -f *.o
        lipo -create -output libhl.dylib libhl.intel.dylib libhl.arm.dylib
    - name: Build Hashlink
      if: matrix.os == 'windows-latest'
      run: |
        cd hashlink
        mkdir bin
        mkdir build
        cl.exe /nologo /c /DLIBHL_EXPORTS src\gc.c src\std\*.c include\pcre\*.c /Isrc /Isrc\std /Iinclude\pcre /Iinclude /Fobuild\ /w
        link.exe /nologo build\*.obj ws2_32.lib user32.lib /DLL /MACHINE:x64 /NOLOGO /OUT:bin/libhl.dll
        del build\*
        cl.exe /nologo /c src/code.c src/jit.c src/main.c src/module.c src/debugger.c src/profile.c /Isrc /Fobuild\ /w
        link.exe /nologo build\*.obj user32.lib bin\libhl.lib /OUT:bin/hl.exe /SUBSYSTEM:CONSOLE
    - name: Build KincHL
      run: |
        cd KincHL
        node ../Kinc/make.js --dynlib --compile --noshaders -g ${{matrix.graphics}}